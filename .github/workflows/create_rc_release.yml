
name: Create Release Candidate
on:
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: write

concurrency:
  cancel-in-progress: true
  group: report-server-build-app-rc

jobs:
  # Allow_Run:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check Branch
  #       run: |
  #         if [[ ${{ github.ref }} == 'refs/heads/release/'* ]]; then
  #           echo "Branch is valid to deploy a release candidate. Proceeding ..."
  #         else
  #           echo "Branch don't match release candidate branch pattern."
  #           exit 1
  #         fi
  Tagging:
    runs-on: ubuntu-latest
    # needs: Allow_Run
    outputs:
      tag_value: ${{ steps.tag.outputs.tag_value }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
          
      - name: Define Tag Value
        id: tag
        run: |
          RELEASE_BRANCH=$(echo ${{ github.ref }} | sed 's/refs\/heads\/release\///g')
          echo "$RELEASE_BRANCH"
          current=$(git tag -l $RELEASE_BRANCH-rc\* --sort=creatordate | tail -n 1)
          echo $current
          if [[ -n $current ]]; then
            current_build=$(echo $current | awk -F 'rc' '{print $2}')
            echo "tag_value="$RELEASE_BRANCH-rc$((current_build + 1))" >> $GITHUB_OUTPUT
          else
            echo "tag_value="$RELEASE_BRANCH-rc1" >> $GITHUB_OUTPUT
          fi
        shell: bash
      - name: Push tag to Repository
        run: |
          git config --global user.name "Automated User"
          git config --global user.email "automateduser@mindlogger"
          git tag ${{ steps.tag.outputs.tag_value }}
          git push origin ${{ steps.tag.outputs.tag_value }}

  App_Build:
    name: Release Candidate
    uses: ./.github/workflows/build_push.yaml
    needs: Tagging
    with:
      repo-name: test-repo
      tag: ${{ needs.Tagging.outputs.tag_value }}
