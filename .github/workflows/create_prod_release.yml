
name: Create Production Release
on:
  pull_request_target:
    types:
      - closed
    branches:
      - main

permissions:
  id-token: write
  contents: write

concurrency:
  cancel-in-progress: true
  group: report-server-build-app-prod

jobs:
  Allow_Run:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Check Branch
        run: |
          if [[ ${{ github.event.pull_request.head.ref }} == 'refs/heads/release/'* ]]; then
            echo "Branch is valid to deploy a production image. Proceeding ..."
          else
            echo "Branch don't match production branch pattern."
            exit 1
          fi
  Tagging:
    runs-on: ubuntu-latest
    needs: Allow_Run
    outputs:
      tag_value: ${{ steps.tag.outputs.release_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      
      - name: Get Release Tag
        id: tag
        run: |
          echo release_tag="$(echo ${{ github.event.pull_request.head.ref }} | sed 's/refs\/.*\///g')" >> $GITHUB_OUTPUT

      - name: Get Latest Release
        run: |
          echo LATEST_RELEASE="$(git tag -l --sort=creatordate | tee | grep -v rc | tail -n 1)" >> $GITHUB_ENV

      - name: Push tag to Repository
        run: |
          git config --global user.name "Automated User"
          git config --global user.email "automateduser@mindlogger"
          git tag ${{ steps.tag.outputs.release_tag }}
          git push origin ${{ steps.tag.outputs.release_tag }}
      
      - name: Generate Release Notes
        run: |
          RELEASE_NOTES=$(gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/releases/generate-notes \
          -f "tag_name=${{ steps.tag.outputs.release_tag }}" -f "target_commitish=main" -f "previous_tag_name=${{ env.LATEST_RELEASE }}" | jq -r .'body' | sed 's/\\n/\n/g')

          gh api \
          --method POST \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/${{ github.repository }}/releases \
          -f "tag_name=${{ steps.tag.outputs.release_tag }}" -f "target_commitish=main" -f "name=${{ steps.tag.outputs.release_tag }}" -f "body=$RELEASE_NOTES" -F "prerelease=false"
        env:
          GH_TOKEN: ${{ github.token }}

  App_Build:
    name: Release Candidate
    uses: ./.github/workflows/build_push.yaml
    needs: Tagging
    with:
      repo-name: test-repo
      tag: ${{ needs.Tagging.outputs.release_tag }}
